<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.guosen.zebra.sample.sharding.dao.CreditDao">
    <resultMap type="com.guosen.zebra.sample.sharding.model.Credit" id="creditResultMap">
        <id column="id" property="id"/>
        <result column="fund_id" property="fundId"/>
        <result column="m_month" property="month"/>
        <result column="d_day" property="day"/>
        <result column="other_field_1" property="otherField1"/>
        <result column="other_field_2" property="otherField2"/>
    </resultMap>

    <insert id="create">
        insert into t_credit (id,fund_id,m_month,d_day,other_field_1,other_field_2) values(#{id},#{fundId},#{month},#{day},#{otherField1},#{otherField2})
    </insert>

    <insert id="batchCreate" parameterType="java.util.List">
        insert into t_credit (id,fund_id,m_month,d_day,other_field_1,other_field_2) values
        <foreach collection="credits" item="item" index="index" separator=",">
            (#{item.id},#{item.fundId},#{item.month},#{item.day},#{item.otherField1},#{item.otherField2})
        </foreach>
    </insert>

    <select id="getByMonth" resultMap="creditResultMap">
        select id,fund_id,m_month,d_day,other_field_1,other_field_2 from t_credit where fund_id = #{fundId} and m_month = #{month} order by d_day asc OFFSET 0 ROW FETCH NEXT 31 ROWS ONLY
    </select>

    <select id="getByDay" resultMap="creditResultMap">
        select id,fund_id,m_month,d_day,other_field_1,other_field_2 from t_credit where fund_id = #{fundId} and m_month = #{month} and d_day = #{day}
    </select>

</mapper>